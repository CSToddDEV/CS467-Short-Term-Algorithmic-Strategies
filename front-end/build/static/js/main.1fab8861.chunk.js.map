{"version":3,"sources":["components/Navigation.js","components/Home.js","components/About.js","components/SignUp.js","components/Unsubscribe.js","components/SignalData.js","components/Portfolio.js","components/Performance.js","components/Main.js","components/App.js","index.js"],"names":["Navigation","props","className","exact","activeClassName","to","logged_in","onClick","logout","update_login","Home","About","SubscribeForm","console","log","state","email","phone","password","handleChange","bind","handleSubmit","event","name","target","this","setState","value","preventDefault","account","nativeEvent","submitter","fetch","method","body","JSON","stringify","headers","then","response","json","token","result","access_token","login","alert","onSubmit","type","onChange","React","Component","SignUp","UnsubscribeForm","Unsubscribe","dataHeaders","DataTable","signals","isLoading","authFetch","res","data","catch","error","table_headers","forEach","header","push","table_rows","signalData","newRow","ticker","date","signal","total_invested","id","generateHeaders","generateRows","SignalData","defaultLabelStyle","fontSize","fontFamily","colors","Portfolio","percent_invested","at","dataValues","colorIndex","cashPercent","title","color","makeGraphData","label","x","y","dx","dy","dataEntry","style","Math","round","percentage","labelStyle","labelPosition","segmentsShift","radius","periods","metricsMap","Map","mockDate","Date","toDateString","MetricsView","currentPeriod","startingCash","tempCash","handleClick","stats","set","period","rate_of_return","benchmark_ror","ror","drawdown","newValue","parseFloat","Number","isNaN","initialValue","toFixed","metricName","percentValue","includesDollar","signChar","dollarValue","setTwoDecimals","toString","metricRows","currentMetrics","get","buildMetricRow","periodHeaders","generatePeriodHeaders","htmlFor","generateMetricRows","for","Performance","map","Main","path","component","render","createAuthProvider","getAccessToken","session","storage","localStorage","useAuth","App","useState","logout_button","update_logout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1fab8861.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\r\n// import { useState } from \"react\";\r\nimport { logout } from \"./App\";\r\n\r\nfunction Navigation(props) {\r\n\r\n    // const [logout_button, update_logout] = useState(props.logged_in);\r\n    // update_logout(props.logged_in)\r\n\r\n    function logout_user() {\r\n        logout();\r\n        props.update_login(false);\r\n    }\r\n\r\n    return (\r\n\r\n      <nav>\r\n          <ul className=\"nav\">\r\n              <li className=\"navUnit\"><NavLink exact activeClassName=\"selectedLink\" className=\"navLink\" to='/3stat'>Home</NavLink></li>\r\n              <li className=\"navUnit\"><NavLink exact activeClassName=\"selectedLink\" className=\"navLink\" to='/3stat/about'>About</NavLink></li>\r\n              {props.logged_in ? <li className=\"navUnit\"><NavLink exact activeClassName=\"selectedLink\" className=\"navLink\" to='/3stat/unsubscribe'>Unsubscribe</NavLink></li> : null}\r\n              {props.logged_in ? <li className=\"navUnit\"><NavLink exact activeClassName=\"selectedLink\" className=\"navLink\" to='/3stat/data'>Signal Data</NavLink></li> : null}\r\n              {props.logged_in ? <li className=\"navUnit\"><NavLink exact activeClassName=\"selectedLink\" className=\"navLink\" to='/3stat/portfolio'>Portfolio</NavLink></li> : null}\r\n              <li className=\"navUnit\"><NavLink exact activeClassName=\"selectedLink\" className=\"navLink\" to='/3stat/performance'>Performance</NavLink></li>\r\n              {props.logged_in ? null : <li className=\"navUnit\"><NavLink exact activeClassName=\"selectedLink\" className=\"navLink\" to='/3stat/signup'>Sign Up</NavLink></li>}\r\n              {props.logged_in ? <button onClick={logout_user}>Logout</button> : null}\r\n          </ul>\r\n      </nav>\r\n    );\r\n  }\r\n  \r\n  export default Navigation;","function Home() {\r\n    return (\r\n      <div className=\"home content\">\r\n        <h1>3STAT</h1>\r\n        <h3>Welcome to the 3X ETF Algorithmic Trader!</h3>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Home;","function About() {\r\n    return (\r\n      <div className=\"about content\">\r\n        <h1>About 3STAT</h1>\r\n        <p>The goal and purpose of the Short-term Algorithmic Stock Market Strategies (referred to as 3STAT going forward) project will be to assess and implement an algorithm to successfully trade 3X leveraged ETFs (exchange-traded funds). With guidance from the project sponsor, the algorithm will be assessed and developed against historical market data, and then implemented with current market data. The successful implementation of the algorithm will culminate in a web application that notifies the users of specific buy and sell signals.\r\n</p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default About;","import React from 'react';\r\nimport {\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport {login} from \"./App\";\r\n\r\n\r\nfunction SignUp(props) {\r\n    return (\r\n      <div className=\"subscribe content\">\r\n        <h1>Sign Up</h1>\r\n        <h3>Enter an email and a phone number (text, optional), and a password to sign up for 3STAT</h3>\r\n        <SubscribeForm logged_in={props.logged_in} update_login={props.update_login}  />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  class SubscribeForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      console.log(\"Subscribe\")\r\n      console.log(props);\r\n      this.state = {\r\n        email: '',\r\n        phone: '',\r\n        password: ''\r\n      }\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n      const name = event.target.name;\r\n\r\n      this.setState({[name]: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      // alert('Email submitted: ' + this.state.email + ' / Phone # submitted: ' + this.state.phone);\r\n      event.preventDefault();\r\n      let account = {\r\n          'email' : this.state.email,\r\n          'phone' : this.state.phone,\r\n          'password' : this.state.password\r\n      }\r\n      if (event.nativeEvent.submitter.value === \"Sign Up\"){\r\n      fetch('/api/authentication/register/', {\r\n          method: 'post',\r\n          body: JSON.stringify(account),\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          }\r\n      }).then(response => response.json())\r\n        .then(token => {\r\n          if (token.result.access_token){\r\n              login(token);\r\n              this.props.update_login(true);\r\n          }\r\n          else {\r\n           alert('Bad Username or Password, or Already Registered');\r\n          }\r\n        })\r\n      }\r\n      else if (event.nativeEvent.submitter.value === \"Login\") {\r\n        fetch('/api/authentication/login/', {\r\n          method: 'post',\r\n          body: JSON.stringify(account),\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          }\r\n        }).then(response => response.json())\r\n            .then(token => {\r\n          if (token.result.access_token){\r\n              login(token);\r\n              this.props.update_login(true);\r\n          }\r\n          else {\r\n                alert('Bad Username or Password');\r\n          }\r\n        })\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      if (this.props.logged_in) {\r\n         return <Redirect to='/3stat' />;\r\n      }\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Email:\r\n            <input name=\"email\" type=\"text\" value={this.state.email} onChange={this.handleChange} />\r\n          </label>\r\n          <br></br>\r\n          <label>\r\n            Phone #:\r\n            <input name=\"phone\" type=\"text\" value={this.state.phone} onChange={this.handleChange} />\r\n          </label>\r\n          <br></br>\r\n          <label>\r\n            Password:\r\n            <input name=\"password\" type=\"text\" value={this.state.password} onChange={this.handleChange} />\r\n          </label>\r\n          <br></br>\r\n          <input type=\"submit\" value=\"Sign Up\" /><input type=\"submit\" value=\"Login\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default SignUp;","import React from 'react';\r\n\r\nfunction Unsubscribe() {\r\n    return (\r\n      <div className=\"unsubscribe content\">\r\n        <h1>Unsubscribe</h1>\r\n        <h3>Enter an email or phone number to unsubscribe</h3>\r\n        <UnsubscribeForm />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  class UnsubscribeForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        email: '',\r\n        phone: ''\r\n      }\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n      const name = event.target.name;\r\n\r\n      this.setState({[name]: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      alert('Email submitted: ' + this.state.email + ' / Phone # submitted: ' + this.state.phone);\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Email:\r\n            <input name=\"email\" type=\"text\" value={this.state.email} onChange={this.handleChange} />\r\n          </label>\r\n          <br></br>\r\n          <label>\r\n            Phone #:\r\n            <input name=\"phone\" type=\"text\" value={this.state.phone} onChange={this.handleChange} />\r\n          </label>\r\n          <br></br>\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Unsubscribe;","import React from 'react';\r\nimport {authFetch} from \"./App\";\r\n\r\nconst dataHeaders = ['Tracked Ticker', 'Date', 'Signal', '% invested'];\r\n\r\nfunction SignalData() {\r\n    return (\r\n      <div className=\"data content\">\r\n        <h1>Signal Data</h1>\r\n        <DataTable \r\n          headers={dataHeaders}\r\n        />\r\n      </div>\r\n    );\r\n}\r\n\r\nclass DataTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        signals: [],\r\n        isLoading: true\r\n      }\r\n  }\r\n\r\n  componentDidMount() {\r\n      authFetch('/3stat/signals/', {\r\n          method: 'get',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          }\r\n        }).then( res => res.json()\r\n        ).then( data => {\r\n            this.setState({\r\n            signals: data,\r\n            isLoading: false\r\n            })\r\n      }).catch( (error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  generateHeaders() {\r\n    let table_headers = [];\r\n    this.props.headers.forEach(header => {\r\n      table_headers.push(<th>{header}</th>)\r\n    });\r\n\r\n    return table_headers;\r\n  }\r\n\r\n  generateRows() {\r\n    let table_rows = [];\r\n\r\n    console.log(\"ROWS\", this.state.signals.result);\r\n    this.state.signals.result.forEach(signalData => {\r\n      let newRow = [];\r\n      newRow.push(<td>{signalData.ticker}</td>);\r\n      newRow.push(<td>{signalData.date}</td>);\r\n      newRow.push(<td>{signalData.signal}</td>);\r\n      newRow.push(<td>{signalData.total_invested + \"%\"}</td>);\r\n\r\n      table_rows.push(<tr key={signalData.id}>{newRow}</tr>);\r\n    });\r\n\r\n    return table_rows;\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <p>Data is loading...</p>\r\n      );\r\n    } else {\r\n      let table_headers = this.generateHeaders();\r\n      let table_rows = this.generateRows();\r\n\r\n      return (\r\n        <table>\r\n          <thead><tr>{table_headers}</tr></thead>\r\n          <tbody>{table_rows}</tbody>\r\n        </table>\r\n      );\r\n    }\r\n  }\r\n}\r\n  \r\nexport default SignalData;","import React from 'react';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport axios from 'axios';\r\nimport {authFetch} from \"./App\";\r\n\r\nconst defaultLabelStyle = {\r\n    fontSize: '5px',\r\n    fontFamily: 'sans-serif',\r\n};\r\n\r\nconst colors = [\r\n    '#86e39f',\r\n    '#11782c',\r\n    '#65d900',\r\n    '#789163'\r\n];\r\n\r\nclass Portfolio extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        ticker: \"\",\r\n        percent_invested: 0,\r\n        isLoading: true\r\n      }\r\n  }\r\n\r\n  componentDidMount() {\r\n    authFetch('/3stat/signals/', {\r\n          method: 'get',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          }\r\n        }).then( response => response.json()\r\n         ).then( data => {\r\n             console.log(data.result.at(-1).ticker);\r\n            this.setState({\r\n                ticker: data.result.at(-1).ticker,\r\n                percent_invested: data.result.at(-1).total_invested,\r\n                isLoading: false\r\n            });\r\n      })\r\n      .catch( (error) => {\r\n        console.log(error);\r\n      }); \r\n  }\r\n\r\n  makeGraphData() {\r\n      let dataValues = [];\r\n      let colorIndex = 0;\r\n      let cashPercent = 100 - this.state.percent_invested;\r\n      if (cashPercent > 0) {\r\n        dataValues.push({title: 'CASH', value: cashPercent, color: colors[colorIndex]});\r\n        colorIndex++;\r\n      }\r\n      if (this.state.percent_invested > 0) {\r\n        dataValues.push({title: this.state.ticker, value: this.state.percent_invested, color: colors[colorIndex]});\r\n      }\r\n\r\n      return dataValues;\r\n  }\r\n  \r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (<p>Data loading...</p>);\r\n    } else {\r\n      return (\r\n        <div className=\"portfolio content\">\r\n          <h1>Current Portfolio Holdings</h1>\r\n          <PieChart\r\n              data={this.makeGraphData()}\r\n              label={({ x, y, dx, dy, dataEntry }) => (\r\n                  <text\r\n                    x={x}\r\n                    y={y}\r\n                    dx={dx}\r\n                    dy={dy}\r\n                    dominant-baseline=\"central\"\r\n                    text-anchor=\"middle\"\r\n                    style={{\r\n                      fontSize: '5px',\r\n                      fontFamily: 'sans-serif',\r\n                    }}\r\n                  >\r\n                    {Math.round(dataEntry.percentage) + '% ' + dataEntry.title}\r\n                  </text>\r\n              )}\r\n              labelStyle={defaultLabelStyle}\r\n              labelPosition={60}\r\n              segmentsShift={0.4}\r\n              radius={45}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\r\n\r\nconst periods = ['2 Weeks', '1 Month', '3 Months', '6 Months', '1 Year'];\r\n\r\nconst metricsMap = new Map();\r\n\r\nlet today = new Date();\r\nconst mockDate = today.toDateString();\r\n\r\nfunction Performance(metricsMap) {\r\n    return (\r\n      <div className=\"performance content\">\r\n        <h1>Performance Metrics</h1>\r\n        <MetricsView map={metricsMap} />\r\n      </div>\r\n    );\r\n}\r\n\r\nclass MetricsView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        currentPeriod: '2 Weeks',\r\n        startingCash: 1000,\r\n        tempCash: 1000,\r\n        isLoading: true\r\n    }\r\n    this.onClick = this.handleClick.bind(this);\r\n    this.onSubmit = this.handleSubmit.bind(this);\r\n    this.onChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('/3stat/stats/', {\r\n          method: 'get',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          }\r\n        }).then( response => response.json()\r\n         ).then( data => {\r\n            this.setState({\r\n                stats: data.result\r\n            });\r\n      }).then( () => {\r\n        metricsMap.set('2 Weeks', {\r\n            period: '2 Weeks',\r\n            rate_of_return: this.state.stats.at(4).rate_of_return,\r\n            benchmark_ror: this.state.stats.at(4).benchmark_ror[0][0].ror,\r\n            drawdown: this.state.stats.at(4).drawdown\r\n        });\r\n        metricsMap.set('1 Month', {\r\n            period: '1 Month',\r\n            rate_of_return: this.state.stats.at(3).rate_of_return,\r\n            benchmark_ror: this.state.stats.at(3).benchmark_ror[0][0].ror,\r\n            drawdown: this.state.stats.at(3).drawdown\r\n        });\r\n        metricsMap.set('3 Months', {\r\n            period: '3 Months',\r\n            rate_of_return: this.state.stats.at(2).rate_of_return,\r\n            benchmark_ror: this.state.stats.at(2).benchmark_ror[0][0].ror,\r\n            drawdown: this.state.stats.at(2).drawdown\r\n        });\r\n        metricsMap.set('6 Months', {\r\n            period: '6 Months',\r\n            rate_of_return: this.state.stats.at(1).rate_of_return,\r\n            benchmark_ror: this.state.stats.at(1).benchmark_ror[0][0].ror,\r\n            drawdown: this.state.stats.at(1).drawdown\r\n        });\r\n        metricsMap.set('1 Year', {\r\n            period: '1 Year',\r\n            rate_of_return: this.state.stats.at(0).rate_of_return,\r\n            benchmark_ror: this.state.stats.at(0).benchmark_ror[0][0].ror,\r\n            drawdown: this.state.stats.at(0).drawdown\r\n        });\r\n        this.setState({\r\n                isLoading: false\r\n            })\r\n    }).catch( (error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleClick(event) {\r\n    this.setState({currentPeriod: event.target.name});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n      event.preventDefault();\r\n\r\n      let newValue = parseFloat(this.state.tempCash);\r\n\r\n      if (!Number.isNaN(newValue)) {\r\n        this.setState({startingCash: newValue});\r\n      }\r\n  }\r\n\r\n  handleChange(event) {\r\n      this.setState({tempCash: event.target.value});\r\n  }\r\n\r\n  generatePeriodHeaders() {\r\n    let headers = [];\r\n\r\n    periods.forEach(period => {\r\n        if (period === this.state.currentPeriod) {\r\n            headers.push(<button className=\"selectedBtn\" name={period} onClick={this.onClick}>{period}</button>);\r\n        } else {\r\n            headers.push(<button name={period} onClick={this.onClick}>{period}</button>);\r\n        }\r\n        \r\n    });\r\n\r\n    return headers;\r\n  }\r\n\r\n  setTwoDecimals(initialValue) {\r\n    return (Math.round(initialValue * 100) / 100).toFixed(2);\r\n  }\r\n\r\n  buildMetricRow(metricName, percentValue, includesDollar) {\r\n    let signChar = '+';\r\n    if (percentValue < 0) {\r\n        signChar = '-';\r\n        percentValue *= -1;\r\n    }\r\n\r\n    let dollarValue = '-';\r\n    if (includesDollar) {\r\n        dollarValue = signChar + '$' + (this.setTwoDecimals((percentValue / 100) * this.state.startingCash)).toString();\r\n    }\r\n\r\n    return (\r\n    <tr>\r\n        <td>{metricName}</td>\r\n        <td>{signChar + percentValue.toString() + '%'}</td>\r\n        <td>{dollarValue}</td>\r\n    </tr>\r\n    );\r\n  }\r\n\r\n  generateMetricRows() {\r\n      let metricRows = [];\r\n      let currentMetrics = metricsMap.get(this.state.currentPeriod);\r\n\r\n      metricRows.push(this.buildMetricRow('3STAT Rate Of Return', currentMetrics.rate_of_return, true));\r\n      metricRows.push(this.buildMetricRow('S&P 500 Rate of Return', currentMetrics.benchmark_ror, true));\r\n      metricRows.push(this.buildMetricRow('Monthly Draw Down Percent', currentMetrics.drawdown, false));\r\n\r\n      return metricRows;\r\n  }\r\n\r\n  render() {\r\n    // Conditional Return for bdata place holder\r\n      let periodHeaders = this.generatePeriodHeaders();\r\n      if (this.state.isLoading) {\r\n      return (\r\n          <div className=\"metricsView\">\r\n              <form onSubmit={this.onSubmit}>\r\n                  <label htmlFor=\"startingCash\" className=\"performanceLabel\">Starting cash ($):</label>\r\n                  <input name=\"startingCash\" type=\"text\" value={this.state.tempCash} onChange={this.onChange}/>\r\n                  <input type=\"submit\" value=\"Set\"/>\r\n              </form>\r\n              <br></br>\r\n              <div className=\"periodTabs\">\r\n                  <span className=\"performanceLabel\">Time Period: </span>\r\n                  {periodHeaders}\r\n              </div>\r\n              <p className=\"periodsNote\">Time periods ending {mockDate}</p>\r\n              <table className=\"metricsTable\">\r\n                  <thead>\r\n                  <tr>\r\n                      <th>Metric</th>\r\n                      <th>% change</th>\r\n                      <th>Dollar change <br></br>(based on starting cash)</th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>Data is Loading...</tbody>\r\n              </table>\r\n          </div>\r\n      )} else{\r\n          let metricRows = this.generateMetricRows();\r\n          return (\r\n        <div className=\"metricsView\">\r\n            <form onSubmit={this.onSubmit}>\r\n                <label for=\"startingCash\" className=\"performanceLabel\">Starting cash ($):</label> \r\n                <input name=\"startingCash\" type=\"text\" value={this.state.tempCash} onChange={this.onChange} />\r\n                <input type=\"submit\" value=\"Set\" />\r\n            </form>\r\n            <br></br>\r\n            <div className=\"periodTabs\">\r\n                <span className=\"performanceLabel\">Time Period: </span>\r\n                {periodHeaders}\r\n            </div>\r\n            <p className=\"periodsNote\">Time periods ending {mockDate}</p>\r\n            <table className=\"metricsTable\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Metric</th>\r\n                        <th>% change</th>\r\n                        <th>Dollar change <br></br>(based on starting cash)</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{metricRows}</tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n  }}\r\n}\r\n  \r\nexport default Performance;","import { Switch, Route } from 'react-router-dom';\r\nimport Home from './Home';\r\nimport About from './About';\r\nimport SignUp from './SignUp';\r\nimport Unsubscribe from './Unsubscribe';\r\nimport SignalData from './SignalData';\r\nimport Portfolio from './Portfolio';\r\nimport Performance from './Performance';\r\n\r\nfunction Main(props) {\r\n    return (\r\n      <Switch>\r\n          <Route exact path='/3stat' component={Home}></Route>\r\n          <Route exact path='/3stat/about' component={About}></Route>\r\n          <Route exact path='/3stat/signup' render={ () => <SignUp logged_in={props.logged_in} update_login={props.update_login} />}></Route>\r\n          <Route exact path='/3stat/unsubscribe' component={Unsubscribe}></Route>\r\n          <Route exact path='/3stat/data' component={SignalData}></Route>\r\n          <Route exact path='/3stat/portfolio' component={Portfolio}></Route>\r\n          <Route exact path='/3stat/performance' component={Performance}></Route>\r\n      </Switch>\r\n    );\r\n  }\r\n  \r\n  export default Main;","import '../styles/App.css';\r\nimport Navigation from './Navigation';\r\nimport Main from './Main';\r\nimport { useState} from \"react\";\r\nimport {createAuthProvider} from \"react-token-auth\";\r\n\r\nexport const { useAuth, authFetch, login, logout } = createAuthProvider({\r\n    getAccessToken: session => {\r\n        return session.result.access_token;\r\n    },\r\n    storage: localStorage\r\n});\r\n\r\nfunction App() {\r\n  const logged_in = useAuth();\r\n  const [logout_button, update_logout] = useState(logged_in[0]);\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation logged_in={logout_button} update_login={update_logout} />\r\n      <Main logged_in={logout_button} update_login={update_logout} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}