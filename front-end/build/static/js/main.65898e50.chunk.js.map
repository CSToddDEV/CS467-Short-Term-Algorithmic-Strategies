{"version":3,"sources":["components/Navigation.js","components/Home.js","components/About.js","components/SignUp.js","components/Unsubscribe.js","components/SignalData.js","components/Portfolio.js","components/Performance.js","components/Page404.js","components/Main.js","components/App.js","index.js"],"names":["Navigation","props","className","exact","activeClassName","to","logged_in","onClick","logout","update_login","Home","About","SubscribeForm","console","log","state","email","phone","password","submitError","handleChange","bind","handleSubmit","event","name","target","this","setState","value","preventDefault","account","nativeEvent","submitter","fetch","method","body","JSON","stringify","headers","then","response","json","token","result","access_token","login","alert","catch","error","onSubmit","type","onChange","React","Component","SignUp","UnsubscribeForm","Unsubscribe","dataHeaders","DataTable","signals","isLoading","serverError","authFetch","res","data","table_headers","forEach","header","push","table_rows","signalData","newRow","ticker","date","signal","total_invested","id","generateHeaders","generateRows","SignalData","defaultLabelStyle","fontSize","fontFamily","colors","Portfolio","percent_invested","dataAvailable","length","at","dataValues","colorIndex","cashPercent","title","color","makeGraphData","label","x","y","dx","dy","dataEntry","style","Math","round","percentage","labelStyle","labelPosition","segmentsShift","radius","periods","metricsMap","Map","mockDate","Date","toDateString","MetricsView","currentPeriod","startingCash","tempCash","handleClick","stats","set","period","rate_of_return","benchmark_ror","ror","drawdown","newValue","parseFloat","Number","isNaN","initialValue","toFixed","metricName","percentValue","includesDollar","signChar","dollarValue","setTwoDecimals","toString","metricRows","currentMetrics","get","buildMetricRow","periodHeaders","generatePeriodHeaders","htmlFor","colspan","generateMetricRows","for","Performance","map","Page404","Main","path","component","render","createAuthProvider","getAccessToken","session","storage","localStorage","useAuth","App","useState","logout_button","update_logout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.65898e50.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n// import { useState } from \"react\";\nimport { logout } from \"./App\";\n\nfunction Navigation(props) {\n\n    // const [logout_button, update_logout] = useState(props.logged_in);\n    // update_logout(props.logged_in)\n\n    function logout_user() {\n        logout();\n        props.update_login(false);\n    }\n\n    return (\n\n      <nav>\n          <ul className=\"nav\">\n              <li className=\"navUnit\"><NavLink exact activeClassName=\"selectedLink\" className=\"navLink\" to='/3stat'>Home</NavLink></li>\n              <li className=\"navUnit\"><NavLink exact activeClassName=\"selectedLink\" className=\"navLink\" to='/3stat/about'>About</NavLink></li>\n              {props.logged_in ? <li className=\"navUnit\"><NavLink exact activeClassName=\"selectedLink\" className=\"navLink\" to='/3stat/unsubscribe'>Unsubscribe</NavLink></li> : null}\n              {props.logged_in ? <li className=\"navUnit\"><NavLink exact activeClassName=\"selectedLink\" className=\"navLink\" to='/3stat/data'>Signal Data</NavLink></li> : null}\n              {props.logged_in ? <li className=\"navUnit\"><NavLink exact activeClassName=\"selectedLink\" className=\"navLink\" to='/3stat/portfolio'>Portfolio</NavLink></li> : null}\n              <li className=\"navUnit\"><NavLink exact activeClassName=\"selectedLink\" className=\"navLink\" to='/3stat/performance'>Performance</NavLink></li>\n              {props.logged_in ? null : <li className=\"navUnit\"><NavLink exact activeClassName=\"selectedLink\" className=\"navLink\" to='/3stat/signup'>Sign Up</NavLink></li>}\n              {props.logged_in ? <button onClick={logout_user}>Logout</button> : null}\n          </ul>\n      </nav>\n    );\n  }\n  \n  export default Navigation;","function Home() {\n    return (\n      <div className=\"home content\">\n        <h1>3STAT</h1>\n        <h3>Welcome to the 3X ETF Algorithmic Trader!</h3>\n      </div>\n    );\n  }\n  \n  export default Home;","function About() {\n    return (\n      <div className=\"about_content\">\n        <h1>About 3STAT</h1>\n        <p>\n            Inflation is actively outpacing most traditional investments.  The US bond market is falling apart.  The global economy is extremely volatile.   We see wealth being hoarded by the rich and watch as policy is created by the highest bidder.\n            <br/><br/>\n            If your money is not working for you, it is actively working against you.\n            <br/><br/>\n            Now is the rise of the Retail Investor.  Investor’s looking to take charge of their finances, their future, their hope.  But in the world of Market Makers and Big Money, many Retail Investors are looking for direction.\n            <br/><br/>\n            Welcome to 3STAT.\n            <br/><br/>\n            The 3STAT Algorithm is a momentum-based multi-resolution trading algorithm with aggressive risk management built in.  The 3STAT Algorithm focuses on a curated list of 3X ETFs, with monthly universe selection utilizing volatility.  With the leveraged power of the 3X weighted ETFS, and the aggressive risk management, the 3STAT Algorithm aims to deliver mighty gains with short-term trades.\n            <br/><br/>\n            But what sets 3STAT Algorithm apart from every other Algorithmic Trader out there is its approachability provided by the 3STAT web-app.  With an interface that is navigable even for luddites, the 3STAT web-app is designed and built to be approachable for traders of all types.  You may view the performance of the 3STAT Algorithm over select periods from the performance page.  You will also be able to see that performance compared to classic benchmarks during those same periods.  All of this is provided for free to help users make the best decision for their portfolio that they can.\n            <br/><br/>\n            If you choose to sign up and become a free subscriber, you will be emailed whenever the 3STAT Algorithm has produced a new buy or sell signal.  This allows 3STAT subscribers to choose to mimic the buy and sell patterns of the 3STAT Algorithm, and reap what rewards come with it.\n            <br/><br/><br/><br/>\n            <span className=\"disclaimer\">A new type of Investor calls for a new type of tool.  3STAT, buy in to your future.</span>\n            <br/><br/><br/><br/><br/><br/>\n            <span className=\"footer\">\n            3STAT is a short-term algorithmic trading strategy project by Dylan Bodvig, Doug Hughes, Ryan Patton, Calvin Todd, and Timothy Turnbaugh for the Oregon State University Fall 2021 Computer Science Capstone class.\n            <br/><br/>\n            <span className=\"disclaimer\">Disclaimer:</span> Nothing on this website is intended to represent financial advice.  Investing in stocks, bonds, exchange traded funds, mutual funds, and money market funds involve risk of loss.  Loss of principal is possible. Some high risk investments may use leverage, which will accentuate gains & losses. A security’s or an algorithm’s past investment performance is not a guarantee or predictor of future investment performance.\n            </span>\n        </p>\n      </div>\n    );\n  }\n  \n  export default About;","import React from 'react';\nimport {\n    Redirect\n} from \"react-router-dom\";\nimport {login} from \"./App\";\n\n\nfunction SignUp(props) {\n    return (\n      <div className=\"subscribe content\">\n        <h1>Sign Up</h1>\n        <h3>Enter an email and a phone number (text, optional), and a password to sign up for 3STAT</h3>\n        <SubscribeForm logged_in={props.logged_in} update_login={props.update_login}  />\n      </div>\n    );\n  }\n\n  class SubscribeForm extends React.Component {\n    constructor(props) {\n      super(props);\n      console.log(\"Subscribe\")\n      console.log(props);\n      this.state = {\n        email: '',\n        phone: '',\n        password: '',\n        submitError: false\n      }\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(event) {\n      const name = event.target.name;\n\n      this.setState({[name]: event.target.value});\n    }\n  \n    handleSubmit(event) {\n      event.preventDefault();\n      let account = {\n          'email' : this.state.email,\n          'phone' : this.state.phone,\n          'password' : this.state.password\n      }\n      if (event.nativeEvent.submitter.value === \"Sign Up\"){\n      fetch('/api/authentication/register/', {\n          method: 'post',\n          body: JSON.stringify(account),\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }).then(response => response.json())\n        .then(token => {\n          if (token.result.access_token){\n              login(token);\n              this.props.update_login(true);\n          }\n          else {\n           alert('Bad Username or Password, or Already Registered');\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          this.setState({\n            submitError: true\n          });\n        });\n      }\n      else if (event.nativeEvent.submitter.value === \"Login\") {\n        fetch('/api/authentication/login/', {\n          method: 'post',\n          body: JSON.stringify(account),\n          headers: {\n              'Content-Type': 'application/json'\n          }\n        }).then(response => response.json())\n            .then(token => {\n          if (token.result.access_token){\n              login(token);\n              this.props.update_login(true);\n          }\n          else {\n                alert('Bad Username or Password');\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          this.setState({\n            submitError: true\n          });\n        });\n      }\n    }\n  \n    render() {\n      if (this.props.logged_in) {\n         return <Redirect to='/3stat' />;\n      }\n      return (\n        <div className=\"signupContent\">\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Email:\n              <input name=\"email\" type=\"text\" value={this.state.email} onChange={this.handleChange} />\n            </label>\n            <br></br>\n            <label>\n              Phone #:\n              <input name=\"phone\" type=\"text\" value={this.state.phone} onChange={this.handleChange} />\n            </label>\n            <br></br>\n            <label>\n              Password:\n              <input name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleChange} />\n            </label>\n            <br></br>\n            <input type=\"submit\" value=\"Sign Up\" /><input type=\"submit\" value=\"Login\" />\n          </form>\n          {this.state.submitError ? <p className=\"errorMsg\">Either a server error has occurred or incorrect inputs have been entered. Please ensure that a valid email and/or phone number have been entered.</p> : null}\n        </div>\n      );\n    }\n  }\n  \n  export default SignUp;","import React from 'react';\n\nfunction Unsubscribe() {\n    return (\n      <div className=\"unsubscribe content\">\n        <h1>Unsubscribe</h1>\n        <h3>Enter an email or phone number to unsubscribe</h3>\n        <UnsubscribeForm />\n      </div>\n    );\n  }\n\n  class UnsubscribeForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        email: '',\n        phone: ''\n      }\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(event) {\n      const name = event.target.name;\n\n      this.setState({[name]: event.target.value});\n    }\n  \n    handleSubmit(event) {\n      alert('Email submitted: ' + this.state.email + ' / Phone # submitted: ' + this.state.phone);\n      event.preventDefault();\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Email:\n            <input name=\"email\" type=\"text\" value={this.state.email} onChange={this.handleChange} />\n          </label>\n          <br></br>\n          <label>\n            Phone #:\n            <input name=\"phone\" type=\"text\" value={this.state.phone} onChange={this.handleChange} />\n          </label>\n          <br></br>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      );\n    }\n  }\n  \n  export default Unsubscribe;","import React from 'react';\nimport {authFetch} from \"./App\";\n\nconst dataHeaders = ['Tracked Ticker', 'Date', 'Signal', '% invested'];\n\nfunction SignalData() {\n    return (\n      <div className=\"data content\">\n        <h1>Signal Data</h1>\n        <DataTable \n          headers={dataHeaders}\n        />\n      </div>\n    );\n}\n\nclass DataTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        signals: [],\n        isLoading: true,\n        serverError: false\n      }\n  }\n\n  componentDidMount() {\n      authFetch('/3stat/signals/', {\n          method: 'get',\n          headers: {\n              'Content-Type': 'application/json'\n          }\n        }).then( res => res.json()\n        ).then( data => {\n            this.setState({\n            signals: data,\n            isLoading: false\n            })\n      }).catch( (error) => {\n        console.log(error);\n        this.setState({\n          serverError: true,\n          isLoading: false\n        });\n      });\n  }\n\n  generateHeaders() {\n    let table_headers = [];\n    this.props.headers.forEach(header => {\n      table_headers.push(<th>{header}</th>)\n    });\n\n    return table_headers;\n  }\n\n  generateRows() {\n    let table_rows = [];\n\n    console.log(\"ROWS\", this.state.signals.result);\n    this.state.signals.result.forEach(signalData => {\n      let newRow = [];\n      newRow.push(<td>{signalData.ticker}</td>);\n      newRow.push(<td>{signalData.date}</td>);\n      newRow.push(<td>{signalData.signal}</td>);\n      newRow.push(<td>{signalData.total_invested + \"%\"}</td>);\n\n      table_rows.push(<tr key={signalData.id}>{newRow}</tr>);\n    });\n\n    return table_rows;\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <p>Data is loading...</p>\n      );\n    } else if (this.state.serverError) {\n      return (<h3>Server error - unable to retrieve the data</h3>);\n    } \n    else {\n      let table_headers = this.generateHeaders();\n      let table_rows = this.generateRows();\n\n      return (\n        <table>\n          <thead><tr>{table_headers}</tr></thead>\n          <tbody>{table_rows}</tbody>\n        </table>\n      );\n    }\n  }\n}\n  \nexport default SignalData;","import React from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport {authFetch} from \"./App\";\n\nconst defaultLabelStyle = {\n    fontSize: '5px',\n    fontFamily: 'sans-serif',\n};\n\nconst colors = [\n    '#86e39f',\n    '#11782c',\n    '#65d900',\n    '#789163'\n];\n\nclass Portfolio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        ticker: \"\",\n        percent_invested: 0,\n        isLoading: true,\n        dataAvailable: true,\n        serverError: false\n      }\n  }\n\n  componentDidMount() {\n    authFetch('/3stat/signals/', {\n          method: 'get',\n          headers: {\n              'Content-Type': 'application/json'\n          }\n        }).then( response => response.json()\n         ).then( data => {\n            if (data.result.length === 0) {\n              this.setState({\n                dataAvailable: false,\n                isLoading: false\n              });\n            } else {\n              console.log(data.result.at(-1).ticker);\n              this.setState({\n                  ticker: data.result.at(-1).ticker,\n                  percent_invested: data.result.at(-1).total_invested,\n                  isLoading: false\n              });\n            }\n      })\n      .catch( (error) => {\n        console.log(error);\n        this.setState({\n          serverError: true,\n          isLoading: false\n        });\n      }); \n  }\n\n  makeGraphData() {\n      let dataValues = [];\n      let colorIndex = 0;\n      let cashPercent = 100 - this.state.percent_invested;\n      if (cashPercent > 0) {\n        dataValues.push({title: 'CASH', value: cashPercent, color: colors[colorIndex]});\n        colorIndex++;\n      }\n      if (this.state.percent_invested > 0) {\n        dataValues.push({title: this.state.ticker, value: this.state.percent_invested, color: colors[colorIndex]});\n      }\n\n      return dataValues;\n  }\n  \n  render() {\n    if (this.state.isLoading) {\n      return (<h3>Data loading...</h3>);\n    } \n    else if (!(this.state.dataAvailable)) {\n      return (<h3>No data currently available</h3>);\n    }\n    else if (this.state.serverError) {\n      return (<h3>Server error - could not retrieve the requested data</h3>);\n    }\n    else {\n      return (\n        <div className=\"portfolio content\">\n          <h1>Current Portfolio Holdings</h1>\n          <PieChart\n              data={this.makeGraphData()}\n              label={({ x, y, dx, dy, dataEntry }) => (\n                  <text\n                    x={x}\n                    y={y}\n                    dx={dx}\n                    dy={dy}\n                    dominant-baseline=\"central\"\n                    text-anchor=\"middle\"\n                    style={{\n                      fontSize: '5px',\n                      fontFamily: 'sans-serif',\n                    }}\n                  >\n                    {Math.round(dataEntry.percentage) + '% ' + dataEntry.title}\n                  </text>\n              )}\n              labelStyle={defaultLabelStyle}\n              labelPosition={60}\n              segmentsShift={0.4}\n              radius={45}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default Portfolio;","import React from 'react';\n\nconst periods = ['2 Weeks', '1 Month', '3 Months', '6 Months', '1 Year'];\n\nconst metricsMap = new Map();\n\nlet today = new Date();\nconst mockDate = today.toDateString();\n\nfunction Performance(metricsMap) {\n    return (\n      <div className=\"performance content\">\n        <h1>Performance Metrics</h1>\n        <MetricsView map={metricsMap} />\n      </div>\n    );\n}\n\nclass MetricsView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        currentPeriod: '2 Weeks',\n        startingCash: 1000,\n        tempCash: 1000,\n        isLoading: true,\n        dataAvailable: true,\n        serverError: false\n    }\n    this.onClick = this.handleClick.bind(this);\n    this.onSubmit = this.handleSubmit.bind(this);\n    this.onChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/3stat/stats/', {\n          method: 'get',\n          headers: {\n              'Content-Type': 'application/json'\n          }\n        }).then( response => response.json()\n         ).then( data => {\n            if (data.result.length === 0) {\n                this.setState({\n                    dataAvailable: false,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    stats: data.result\n                });\n            }\n      }).then( () => {\n        if (this.state.dataAvailable) {\n            metricsMap.set('2 Weeks', {\n                period: '2 Weeks',\n                rate_of_return: this.state.stats.at(4).rate_of_return,\n                benchmark_ror: this.state.stats.at(4).benchmark_ror[0][0].ror,\n                drawdown: this.state.stats.at(4).drawdown\n            });\n            metricsMap.set('1 Month', {\n                period: '1 Month',\n                rate_of_return: this.state.stats.at(3).rate_of_return,\n                benchmark_ror: this.state.stats.at(3).benchmark_ror[0][0].ror,\n                drawdown: this.state.stats.at(3).drawdown\n            });\n            metricsMap.set('3 Months', {\n                period: '3 Months',\n                rate_of_return: this.state.stats.at(2).rate_of_return,\n                benchmark_ror: this.state.stats.at(2).benchmark_ror[0][0].ror,\n                drawdown: this.state.stats.at(2).drawdown\n            });\n            metricsMap.set('6 Months', {\n                period: '6 Months',\n                rate_of_return: this.state.stats.at(1).rate_of_return,\n                benchmark_ror: this.state.stats.at(1).benchmark_ror[0][0].ror,\n                drawdown: this.state.stats.at(1).drawdown\n            });\n            metricsMap.set('1 Year', {\n                period: '1 Year',\n                rate_of_return: this.state.stats.at(0).rate_of_return,\n                benchmark_ror: this.state.stats.at(0).benchmark_ror[0][0].ror,\n                drawdown: this.state.stats.at(0).drawdown\n            });\n            this.setState({\n                isLoading: false\n            });\n        }\n    }).catch( (error) => {\n        console.log(error);\n        this.setState({\n            isLoading: false,\n            serverError: true\n        });\n      });\n  }\n\n  handleClick(event) {\n    this.setState({currentPeriod: event.target.name});\n  }\n\n  handleSubmit(event) {\n      event.preventDefault();\n\n      let newValue = parseFloat(this.state.tempCash);\n\n      if (!Number.isNaN(newValue)) {\n        this.setState({startingCash: newValue});\n      }\n  }\n\n  handleChange(event) {\n      this.setState({tempCash: event.target.value});\n  }\n\n  generatePeriodHeaders() {\n    let headers = [];\n\n    periods.forEach(period => {\n        if (period === this.state.currentPeriod) {\n            headers.push(<button className=\"selectedBtn\" name={period} onClick={this.onClick}>{period}</button>);\n        } else {\n            headers.push(<button name={period} onClick={this.onClick}>{period}</button>);\n        }\n        \n    });\n\n    return headers;\n  }\n\n  setTwoDecimals(initialValue) {\n    return (Math.round(initialValue * 100) / 100).toFixed(2);\n  }\n\n  buildMetricRow(metricName, percentValue, includesDollar) {\n    let signChar = '+';\n    if (percentValue < 0) {\n        signChar = '-';\n        percentValue *= -1;\n    }\n\n    let dollarValue = '-';\n    if (includesDollar) {\n        dollarValue = signChar + '$' + (this.setTwoDecimals((percentValue / 100) * this.state.startingCash)).toString();\n    }\n\n    return (\n    <tr>\n        <td>{metricName}</td>\n        <td>{signChar + percentValue.toString() + '%'}</td>\n        <td>{dollarValue}</td>\n    </tr>\n    );\n  }\n\n  generateMetricRows() {\n      let metricRows = [];\n      let currentMetrics = metricsMap.get(this.state.currentPeriod);\n\n      metricRows.push(this.buildMetricRow('3STAT Rate Of Return', currentMetrics.rate_of_return, true));\n      metricRows.push(this.buildMetricRow('S&P 500 Rate of Return', currentMetrics.benchmark_ror, true));\n      metricRows.push(this.buildMetricRow('Monthly Draw Down Percent', currentMetrics.drawdown, false));\n\n      return metricRows;\n  }\n\n  render() {\n      let periodHeaders = this.generatePeriodHeaders();\n      if (this.state.isLoading) {\n        return (\n          <div className=\"metricsView\">\n              <form onSubmit={this.onSubmit}>\n                  <label htmlFor=\"startingCash\" className=\"performanceLabel\">Starting cash ($):</label>\n                  <input name=\"startingCash\" type=\"text\" value={this.state.tempCash} onChange={this.onChange}/>\n                  <input type=\"submit\" value=\"Set\"/>\n              </form>\n              <br></br>\n              <div className=\"periodTabs\">\n                  <span className=\"performanceLabel\">Time Period: </span>\n                  {periodHeaders}\n              </div>\n              <p className=\"periodsNote\">Time periods ending {mockDate}</p>\n              <table className=\"metricsTable\">\n                  <thead>\n                  <tr>\n                      <th>Metric</th>\n                      <th>% change</th>\n                      <th>Dollar change <br></br>(based on starting cash)</th>\n                  </tr>\n                  </thead>\n                  <tbody>Data is Loading...</tbody>\n              </table>\n          </div>);\n      } \n      else if (!(this.state.dataAvailable)) {\n        return (\n            <div className=\"metricsView\">\n                <form onSubmit={this.onSubmit}>\n                    <label htmlFor=\"startingCash\" className=\"performanceLabel\">Starting cash ($):</label>\n                    <input name=\"startingCash\" type=\"text\" value={this.state.tempCash} onChange={this.onChange}/>\n                    <input type=\"submit\" value=\"Set\"/>\n                </form>\n                <br></br>\n                <div className=\"periodTabs\">\n                    <span className=\"performanceLabel\">Time Period: </span>\n                    {periodHeaders}\n                </div>\n                <p className=\"periodsNote\">Time periods ending {mockDate}</p>\n                <table className=\"metricsTable\">\n                    <thead>\n                    <tr>\n                        <th>Metric</th>\n                        <th>% change</th>\n                        <th>Dollar change <br></br>(based on starting cash)</th>\n                    </tr>\n                    </thead>\n                    <tbody><tr><td colspan=\"3\">No data currently available</td></tr></tbody>\n                </table>\n            </div>\n        );\n      }\n      else if (this.state.serverError) {\n        return (\n            <div className=\"metricsView\">\n                <form onSubmit={this.onSubmit}>\n                    <label htmlFor=\"startingCash\" className=\"performanceLabel\">Starting cash ($):</label>\n                    <input name=\"startingCash\" type=\"text\" value={this.state.tempCash} onChange={this.onChange}/>\n                    <input type=\"submit\" value=\"Set\"/>\n                </form>\n                <br></br>\n                <div className=\"periodTabs\">\n                    <span className=\"performanceLabel\">Time Period: </span>\n                    {periodHeaders}\n                </div>\n                <p className=\"periodsNote\">Time periods ending {mockDate}</p>\n                <table className=\"metricsTable\">\n                    <thead>\n                    <tr>\n                        <th>Metric</th>\n                        <th>% change</th>\n                        <th>Dollar change <br></br>(based on starting cash)</th>\n                    </tr>\n                    </thead>\n                    <tbody><tr><td colspan=\"3\">Server error - unable to retrieve the data</td></tr></tbody>\n                </table>\n            </div>\n        );\n      }\n      else{\n          let metricRows = this.generateMetricRows();\n          return (\n        <div className=\"metricsView\">\n            <form onSubmit={this.onSubmit}>\n                <label for=\"startingCash\" className=\"performanceLabel\">Starting cash ($):</label> \n                <input name=\"startingCash\" type=\"text\" value={this.state.tempCash} onChange={this.onChange} />\n                <input type=\"submit\" value=\"Set\" />\n            </form>\n            <br></br>\n            <div className=\"periodTabs\">\n                <span className=\"performanceLabel\">Time Period: </span>\n                {periodHeaders}\n            </div>\n            <p className=\"periodsNote\">Time periods ending {mockDate}</p>\n            <table className=\"metricsTable\">\n                <thead>\n                    <tr>\n                        <th>Metric</th>\n                        <th>% change</th>\n                        <th>Dollar change <br></br>(based on starting cash)</th>\n                    </tr>\n                </thead>\n                <tbody>{metricRows}</tbody>\n            </table>\n        </div>\n    );\n  }}\n}\n  \nexport default Performance;","import React from 'react';\n\nconst Page404 = () => {\n    return (\n        <div className=\"404\">\n            <h1>404</h1>\n            <h3>The page does not exist. Please check the web address.</h3>\n        </div>\n    );\n};\n\nexport default Page404;","import { Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport About from './About';\nimport SignUp from './SignUp';\nimport Unsubscribe from './Unsubscribe';\nimport SignalData from './SignalData';\nimport Portfolio from './Portfolio';\nimport Performance from './Performance';\nimport Page404 from './Page404';\n\nfunction Main(props) {\n    return (\n      <Switch>\n        <Route exact path='/3stat' component={Home}></Route>\n        <Route exact path='/3stat/about' component={About}></Route>\n        <Route exact path='/3stat/signup' render={ () => <SignUp logged_in={props.logged_in} update_login={props.update_login} />}></Route>\n        <Route exact path='/3stat/unsubscribe' component={Unsubscribe}></Route>\n        <Route exact path='/3stat/data' component={SignalData}></Route>\n        <Route exact path='/3stat/portfolio' component={Portfolio}></Route>\n        <Route exact path='/3stat/performance' component={Performance}></Route>\n        <Route component={Page404}></Route>\n      </Switch>\n    );\n  }\n  \n  export default Main;","import '../styles/App.css';\nimport Navigation from './Navigation';\nimport Main from './Main';\nimport { useState} from \"react\";\nimport {createAuthProvider} from \"react-token-auth\";\n\nexport const { useAuth, authFetch, login, logout } = createAuthProvider({\n    getAccessToken: session => {\n        return session.result.access_token;\n    },\n    storage: localStorage\n});\n\nfunction App() {\n  const logged_in = useAuth();\n  const [logout_button, update_logout] = useState(logged_in[0]);\n  return (\n    <div className=\"App\">\n      <Navigation logged_in={logout_button} update_login={update_logout} />\n      <Main logged_in={logout_button} update_login={update_logout} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}